KRUSKAL_MST(Graph G, int k):
    Sort edges in G by increasing weight
    MAKE-SETS(G's vertices)
    MST_Weight = 0
    
    Sets_count = v
    For each edge (u, v) in sorted edges:
        If FIND_SET(u) â‰  FIND_SET(v):
            If sets_count == k
            	stop (k clusters have been formed)
            	
            Add edge (u, v) to MST
            MST_Weight += edge weight
            UNION(u, v)
            sets_count -= 1
            

    Return MST_Weight

MAKE_SETS(n)
    initialize Parent[] and Rank[] arrays for n vertices
    for each i from 0 to n-1
    	Parent[i] = i
    	Rank[i] = 0
    	
  
FIND_SET(u):
    If u != Parent[u]:
        Parent[u] = FIND_SET(Parent[u]) 
    Return Parent[u]


UNION(x, y):
    RootX = FIND_SET(x)
    RootY = FIND_SET(y)

    If Rank[RootX] > Rank[RootY]:
        Parent[RootY] = RootX
    Else:
        Parent[RootX] = RootY
        If Rank[RootX] = Rank[RootY]:
            Rank[RootY] += 1 
